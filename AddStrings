Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

===============================================================================================================================

class Solution {
    public String addStrings(String num1, String num2) {
        int i; //index for num1 
        int j; //index for num2 
        int result = 0;
        List<Integer> myList = new ArrayList<Integer>();
        
        
        for(i=0 ; i<num1.length(); i++) {
          myList.add((int) (Character.getNumericValue(num1.charAt(i))*Math.pow(10, num1.length()-i-1)) );    
        }
        
        for(j=0 ; j<num2.length(); j++) {
          myList.add((int) (Character.getNumericValue(num2.charAt(j))*Math.pow(10, num2.length()-j-1)) );    
        }
        
        for (Integer num : myList) { 		      
          result += num;
        }
        
        return Integer.toString(result);
    }
}
